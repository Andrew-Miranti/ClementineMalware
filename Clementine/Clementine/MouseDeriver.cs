using System;
using System.Windows.Forms;
using System.Drawing;
using System.Diagnostics;
using System.Runtime.InteropServices;

namespace Clementine
{
    public sealed class MouseDeriver : ParallelPayload
    {
        private const float SCALE = .5f;
        private PointF[] derivs;
        private IntPtr hWnd;
        private bool forceFocus;

        private void GrabFocus()
        {
            // http://stackoverflow.com/questions/7357675/how-can-i-set-the-focus-to-application-which-is-allready-in-running-state
            if (hWnd != IntPtr.Zero)
            {
                SetForegroundWindow(hWnd);
                ShowWindow(hWnd, 5);
            }
        }

        public MouseDeriver(int num, bool force) : base(10)
        {
            hWnd = Process.GetCurrentProcess().MainWindowHandle;
            forceFocus = force;
            derivs = new PointF[num];
        }

        protected override void StartupTasks()
        {
            //derivs[0] = Cursor.Position;
            for (int i = 0; i < derivs.Length; i++)
            {
                derivs[i] = new PointF();
            }
        }

        private PointF ScalePoint(PointF point, int index)
        {
            return new PointF((float)(point.X * Math.Pow(SCALE, index)), (float)(point.Y * Math.Pow(SCALE, index)));
        }

        protected override void Payload()
        {
            derivs[derivs.Length - 1] = ScalePoint(Cursor.Position - new Size(Point.Round(derivs[0])), derivs.Length - 1);
            for (int i = derivs.Length - 2; i >= 0; i--)
            {
                derivs[i] += new SizeF(ScalePoint(derivs[i+1], i));
            }
            Cursor.Position = Point.Round(derivs[0]);
            if (forceFocus)
            {
                GrabFocus();
            }
        }

        [DllImport("user32.dll")]
        private static extern IntPtr SetForegroundWindow(IntPtr hWnd);

        [DllImport("user32.dll")]
        private static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);
    }
}
